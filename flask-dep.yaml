apiVersion: v1
kind: PersistentVolumeClaim
metadata:
name: mongo-pvc
spec:
accessModes:
- ReadWriteOnce
resources:
requests:
storage: 256Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
name: mongo-db-deployment
spec:
selector:
matchLabels:
app: mongo-db
template:
metadata:
labels:
app: mongo-db
spec:
containers:
- name: mongo-db-container
image: mongo:latest
ports:
- containerPort: 27017
volumeMounts:
- name: mongo-storage
mountPath: /data/db
volumes:
- name: mongo-storage
persistentVolumeClaim:
claimName: mongo-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
name: flask-deployment
spec:
selector:
matchLabels:
app: flask-app
template:
metadata:
labels:
app: flask-app
spec:
containers:
- name: flask-app-container
image: rp3978/app-img:1.0
ports:
- containerPort: 500
env:
- name: MONGO_HOST
value: "mongodb-svc"
livenessProbe: # Add this section
tcpSocket:
port: 5000
initialDelaySeconds: 15
periodSeconds: 20
readinessProbe: # And this section
tcpSocket:
port: 5000
initialDelaySeconds: 5
periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
name: mongodb-svc
spec:
selector:
app: mongo-db
ports:
- protocol: TCP
port: 27017
targetPort: 27017
---
apiVersion: v1
kind: Service
metadata:
name: todo-svc
spec:
type: LoadBalancer
selector:
app: flask-app
ports:
- name: http
port: 80
targetPort: 5000
